#!/usr/bin/python

import numpy as np

ids=("xrysntkqrduheficajodiglvzw","xzymntkqrbuhefmcajodiflvzw","xpysetkyrbuhefmcajodiglvgw","xtysnykqrbuhefmczjodiglvzw","xpysntkqyvuhefmjajodiglvzw","xpysntkqrbuqjfmcajodiglvzu","xpysntkqrbuhefmvaoodimlvzw","xplsntkqrbuhefmcajohimlvzw","cpysntkqrbuhefmcajodiglpmw","xpysndkqrbuhefmcajzdiglmzw","xpysntkqrbuhsfmctjoqiglvzw","xpysztkkrbuhewmcajodiglvzw","xpysntkguzuhefmcajodiglvzw","xpysnbkvrbuhyfmcajodiglvzw","xpgsntkqrbphefmcajodzglvzw","xpysntkqrbdhefmcajodvgqvzw","xpmsntkqrbuhedmcajodiglvnw","wpysntkqmbuheemcajodiglvzw","xpysntdvrbuhdfmcajodiglvzw","xpbsetkqrbuhefmcayodiglvzw","xpasntkqrbuhefmcajydigovzw","xpylntkqrbuhefmcajudiglnzw","xpysqtkqrbuoefmcrjodiglvzw","xlysntkqrbuhefmuejodiglvzw","xpysntkqrzuhewmcajodaglvzw","xpysotkqrbuhefmxajowiglvzw","xpysntkqrbuhefmcajodinlyza","xpysntkqrbuhemmmajofiglvzw","xpysntkqcbuhezmcyjodiglvzw","xpysntyqrbuhefmcajodiglvfn","xpysntkqrbudefmcarodcglvzw","xpysntkqrjuhefkcajodiglvzg","xpysntkqrbuhefmcahooiglvow","xpysntkqrqfhevmcajodiglvzw","xpysntlqrbuhefmcajodivlvzu","xpyjotkqrbuhefmcavodiglvzw","xpysntqqrbuhebmcgjodiglvzw","xpjsnikqbbuhefmcajodiglvzw","xpysntkqrbuhefmcalodeflvzw","xpysntktrbuhefmcaqoviglvzw","xpysntkqrbuhefmcrjogiglvzk","xpysntkqrjuhekmcajodixlvzw","xpypntyqrbuhefmcajodigzvzw","cpysnwkqrbuhefmcajodiglvww","xpysntkqqbuqefmcajodiglvlw","xpysntkqrbuhvfmcajldiglvzh","xpysntkqrbuhefmzmjodislvzw","xpysnnkqrbuhefmcajodjplyzw","xpysntdqobuhefmcajbdiglvzw","xpyzntknrbuhefmcajodigtvzw","xpysntkqbbohefmcajodialvzw","xpysntkqryuhefmcayoxiglvzw","xxysntkqrbuhefmcajodiglgzl","jzysntkqrbuhmfmcajodiglvzw","xpysntocrbuhefmcakodiglvzw","xpysntkqrbuheomrgjodiglvzw","xpysntkerbuhefmxajoduglvzw","xpysntkqobuhefpcajodiglvzd","xpysntkqrbvhefmcajopislvzw","xpysntkqrbuhefucqjodiglvqw","xpysvtkqrbuhdfmcajokiglvzw","xqysnjkqrbuhemmcajodiglvzw","xpysnteqxbuhefmcajodiglvdw","xpysntkqrbuhefzcajodignvzc","xpysntkqrbuledmcajoyiglvzw","xpysntkqrbuhofmcajkdigpvzw","xpysmtkqrbuhefmcajodaglvze","xlysntiqrbuhefmqajodiglvzw","xpysntvqrbugefmcajodiglizw","xpysntkqrbuhefmuwjndiglvzw","ypysntkqrbuhefmbajodislvzw","xpycntkqrbuhemmcaqodiglvzw","xpysntkqrbuhefmcajobivdvzw","xpysnfkprbuhefmcajodiglvkw","xtysntkwrjuhefmcajodiglvzw","xpysntkqrbqhefmcaxodiulvzw","xpysntkqrbuhefmcajsdigkvkw","xpysnekqrbugefmcajwdiglvzw","xpysntkqjbuhefmcajoduglbzw","xpysntkqrbohlfmcajodiggvzw","xpysntkqrbfhefmcajodiglhnw","xpmsntkirbusefmcajodiglvzw","xpnsntkqrbehefmcajodigrvzw","xpytntgqrbuhefmcajodigllzw","xpysntkqrbuhefmcejodiglvvm","xpyvntkqrbuhefmmajodiglmzw","rpysntkirbuhefmcajodiglyzw","xpysntkqrbuhefmcajoznglvzz","xpysntkqrbmhefmcafodigwvzw","xpysntkqrbuhetmcarodiglvzx","xpysntnqrbuhefmcajogiglfzw","xpysutkqjbuheomcajodiglvzw","xpysnqkprbuhefkcajodiglvzw","xpysntuqrbuhemmcajodyglvzw","spysntkqrbupefmcajodigpvzw","qpygntkqrbuhefmcajodqglvzw","xpysnteqrbuhefmcatodiylvzw","xpysntkqrbusefsckjodiglvzw","xpysntkqrbubeflcajodiglvcw","xpysntwqrbuhefmcajodigekzw","xpysntkqrbuhefmcnjodiguvtw","xpysntkqrbqhefmkasodiglvzw","xmysntkqrbuhefmkcjodiglvzw","xpysntkqrquhefmcajodiouvzw","xpysnnkqrbuhefmcajodiplyzw","xpysntkorbuhefaqajodiglvzw","npysntkqobuhefmcajodiglvfw","xlysntkqrbuhefmcazbdiglvzw","xpysftkqrbihefmcajodiglezw","xpysolqqrbuhefmcajodiglvzw","xpysntkqrwuheixcajodiglvzw","xoysntkqibuhefmcqjodiglvzw","xpysntkqrbupefmcajodtulvzw","xpyentkqrbuhvfmcajudiglvzw","xpysntksrbuhefmgajodqglvzw","xpysntkqrbuhcfmcvjodigldzw","gpyrntdqrbuhefmcajodiglvzw","vpysntvqrbuhefmcajndiglvzw","xpvsntkqrbuhefvcajhdiglvzw","xpysntkqrbubefmcajowiglvzl","xpysndkqibuhefmcajodiblvzw","xpysntkqrbuhefmldjodjglvzw","xpysntzqrbuhefmcyjomiglvzw","xpysntkqrbuhefmedjodiwlvzw","xpysntklrbuhefmcyjodiglvjw","xpypnlkqrbehefmcajodiglvzw","xpysntkqrbuhefycacodiglvzz","ypysntkqrbuhefmcajadiglvew","xpysntkqobuhefmcajadiglhzw","xpysbtxlrbuhefmcajodiglvzw","xpysntkqrbuhefdcajoviglvww","xpysntkqrbuhefmcaaodiblvzc","wpysntkqrbuhefmcajddiglvbw","wpysntmqrbuhefmcajodiglvza","epysntkqrbuhemmcajoniglvzw","vpysntkqrbuhejmcajodiglvzo","xpysntkqrbuhebmmajodiglazw","lpysntkqrguhtfmcajodiglvzw","xpksndkqpbuhefmcajodiglvzw","xpydnukqrbuhefmcajmdiglvzw","xpysnmkqrbuhefioajodiglvzw","xpysntkqruuhefmcajodyglvzx","xpysntkqrmuhefmcmjidiglvzw","xpysntksrbupefmcajodiplvzw","xpykntkqrbuhefmmajodiglxzw","xpssntkqrbuhefmzajodiglvgw","xpysntkqrbuhefmcrjodigovzd","xpysntkqrbuhefmpajodirlvqw","xpysnskqrruhefmtajodiglvzw","xpysnzkqrbuhezmcajodiglvzj","xpysntkcrburefmckjodiglvzw","xpysntkqrbuhefecpoodiglvzw","xpysnjkqrbuhexmcajodigrvzw","xpysztkqhbuhefmcanodiglvzw","xpysntkqrbuhefmcajozyelvzw","xpyuntkmrbuhefmcajodigcvzw","xpysnykmrbuhefmaajodiglvzw","jpysntkqrbuhefmcajodigumzw","xtysntkqhbuhefmcajodiglvzz","xpysntkqrbqhefmcxjouiglvzw","xpysntkqreujefmmajodiglvzw","xnysntzqrbuhefacajodiglvzw","xpysntkqriuhefmcajkdiqlvzw","xposntkqrbuheffcajodihlvzw","xpysntkqpquhefmcajodrglvzw","xpysjtkqrbudefmcajouiglvzw","xpysnxkqrbulefmcacodiglvzw","xpygntkqrbuhefmfajzdiglvzw","xpysntkqrbuhefmuayodiglyzw","xpysnbksrbuhefmcajediglvzw","xkyzntkqrbuhefmcajodiglvzz","xpysntkqrbehlxmcajodiglvzw","xpysntkqryuhefmcaxodiklvzw","xpysntdqrbuhefmcjjodiglvzt","xpysntkqrbuhefmcauodigqvzy","xpysftkqrbuhefmcajodrgvvzw","xpysntkqrbuhefmczjodiglivw","xpysatkorbuhefmcyjodiglvzw","xhysntkqrbthefmcajodxglvzw","xpysnpkqrbuhefmcajoqyglvzw","xpyyntkqrbuhefmcjjodxglvzw","xpysntkqrozhefhcajodiglvzw","xpymftkqrbuhefmcajodiglvzo","xpysntkqrbuhvfmcajodiyllzw","xpysatsqrbuhefmcajodiglvzo","cpysntkqqbuhefmcajodlglvzw","xpysntkyrblhefmcajodiglvzz","xpysntkfrbuhefbcajodiglbzw","upysotkqrbuhpfmcajodiglvzw","xpysdokqrbuheflcajodiglvzw","xrysntkqrbuhefpcanodiglvzw","xdysntkqrbuhefpcajodiglmzw","xpyynteqrbjhefmcajodiglvzw","xpysntkqrbuhefkcajodielvhw","xplsktkqrbuhefmcajodtglvzw","xpysrtkqrbuhefmcdjodiglvzx","upysntkmrbuhefmcajodiglvzt","xnysnpkqrbusefmcajodiglvzw","xtysntnqrbuhexmcajodiglvzw","xpysngkmrbfhefmcajodiglvzw","xpysnhkhrbuhefmcajodiplvzw","xpysntvqrbuhefmcaoodsglvzw","xpyzntkqrbuhefmcajlviglvzw","xpysndkqrbuievmcajodiglvzw","xpysntkqrsuhcfzcajodiglvzw","xpysntkqlbuhefmcajjdlglvzw","xpysntkqrbuhifmcajoliylvzw","xpysntkqxbphefmcajodialvzw","bnyswtkqrbuhefmcajodiglvzw","upysatkqrbuhefmcajodvglvzw","xpysntkqqbuhefmcajodxglzzw","xpysntkqryuhefmcafodinlvzw","xpzsntkqrcuhefmcajokiglvzw","xpynntkqrbuheimccjodiglvzw","xpysnfkqduuhefmcajodiglvzw","xpywntkqrbuhefmcajodigllzz","xpysftkqrbahefmcajsdiglvzw","xpysntkkrbutefmcljodiglvzw","xfysntkqrbbhkfmcajodiglvzw","xpysgtksrbuhefkcajodiglvzw","xpysntyqrbuhefmcajodijlvzg","xpysnpkqobuhefmcljodiglvzw","xvysntkqrbuhefmcsjodiclvzw","xpysntkqrtuhwfmcajodillvzw","xpysntkprbuhejmcajouiglvzw","apysntkqrbuhefmcaboviglvzw","xpysqykqrbuhefmcajodirlvzw","xpysntkqrluhefmcajowiglvzf","dpysnokqrbuhefmcajoaiglvzw","xppsntkqmbuheumcajodiglvzw","xpysntkqrbuhlymcaoodiglvzw","dpysntkqrbuhmfmcajodiglvzt","xpysltbqrbuhefmcajoliglvzw","xpysntpqrbuhefmcnjoniglvzw","xpysntpqrbuhektcajodiglvzw","xpysntkhrbshefmqajodiglvzw","zpysntuqrbuhefmcajmdiglvzw","xpysxtdqrbuhefmcajoyiglvzw","xpysntkubbumefmcajodiglvzw","xpysntkqzouhefmcajsdiglvzw","xpysntkqrbuhefmcojoziglvyw","jpysntkqrmuhefmcajodidlvzw","xpmsttkqrhuhefmcajodiglvzw","xpysntkqlbuhefmcajgdiflvzw","xpysntxkrbuhefmcauodiglvzw","xpysotkqubuhefscajodiglvzw","xjysntkqrbvheemcajodiglvzw","xpykntkqrbuhefmcpjodiglvow","xplsntkqrbuvefmcajediglvzw","upysntwqrbuhefmfajodiglvzw")
# ~ ids = ("abcdef","bababc","abbcde","abcccd","aabcdd","abcdee","ababab")

# ~ abcdef contains no letters that appear exactly two or three times.
# ~ bababc contains two a and three b, so it counts for both.
# ~ abbcde contains two b, but no letter appears exactly three times.
# ~ abcccd contains three c, but no letter appears exactly two times.
# ~ aabcdd contains two a and two d, but it only counts once.
# ~ abcdee contains two e.
# ~ ababab contains three a and three b, but it only counts once.


twos = 0
threes = 0

for a in ids:
	tempcnt = {}
	print ("new a={}".format(a))
	mycnt2 = 0
	mycnt3 = 0
	for b in np.unique(list(a)):
		print("{} qty {}".format(b,a.count(b)))
		if a.count(b) == 2:
			mycnt2 = 1
		elif a.count(b) == 3:
			mycnt3 = 1
	twos += mycnt2
	threes +=  mycnt3

print("Checksum, twos {} times threes {} = {}".format(twos,threes,twos*threes))
